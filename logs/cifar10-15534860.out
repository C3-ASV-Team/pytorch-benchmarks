*** WARNING: This is an experimental installation of pytorch built specifically for MPI / distributed running ***
1: 2018-10-07 21:10:23,903 INFO Initializing
0: 2018-10-07 21:10:23,915 INFO Initializing
2: 2018-10-07 21:10:23,920 INFO Initializing
3: 2018-10-07 21:10:23,937 INFO Initializing
2: 2018-10-07 21:10:23,986 INFO MPI rank 2
3: 2018-10-07 21:10:23,983 INFO MPI rank 3
1: 2018-10-07 21:10:23,985 INFO MPI rank 1
0: 2018-10-07 21:10:23,985 INFO MPI rank 0
0: 2018-10-07 21:10:23,989 INFO Configuration: {'data_config': {'name': 'cifar10', 'data_path': '$SCRATCH/pytorch-cifar10/data', 'n_train': 32768, 'n_valid': 8192}, 'experiment_config': {'name': 'cifar10', 'output_dir': '$SCRATCH/pytorch-cifar10/output'}, 'model_config': {'model_type': 'resnet50_cifar10', 'optimizer': 'Adam', 'learning_rate': 0.001}, 'train_config': {'batch_size': 64, 'n_epochs': 1}}
1: 2018-10-07 21:10:26,836 INFO Loaded 32768 training samples and 8192 validation samples
3: 2018-10-07 21:10:26,837 INFO Loaded 32768 training samples and 8192 validation samples
0: 2018-10-07 21:10:26,840 INFO Loaded 32768 training samples and 8192 validation samples
2: 2018-10-07 21:10:27,431 INFO Loaded 32768 training samples and 8192 validation samples
2: 2018-10-07 21:10:27,648 INFO Epoch 0
1: 2018-10-07 21:10:27,648 INFO Epoch 0
3: 2018-10-07 21:10:27,645 INFO Epoch 0
0: 2018-10-07 21:10:27,649 INFO Model: 
0: DistributedDataParallelCPU(
0:   (module): ResNet(
0:     (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:     (layer1): Sequential(
0:       (0): Bottleneck(
0:         (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential(
0:           (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:           (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         )
0:       )
0:       (1): Bottleneck(
0:         (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:       (2): Bottleneck(
0:         (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:     )
0:     (layer2): Sequential(
0:       (0): Bottleneck(
0:         (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential(
0:           (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
0:           (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         )
0:       )
0:       (1): Bottleneck(
0:         (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:       (2): Bottleneck(
0:         (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:       (3): Bottleneck(
0:         (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:     )
0:     (layer3): Sequential(
0:       (0): Bottleneck(
0:         (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential(
0:           (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
0:           (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         )
0:       )
0:       (1): Bottleneck(
0:         (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:       (2): Bottleneck(
0:         (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:       (3): Bottleneck(
0:         (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:       (4): Bottleneck(
0:         (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:       (5): Bottleneck(
0:         (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:     )
0:     (layer4): Sequential(
0:       (0): Bottleneck(
0:         (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential(
0:           (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
0:           (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         )
0:       )
0:       (1): Bottleneck(
0:         (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:       (2): Bottleneck(
0:         (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
0:         (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
0:         (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
0:         (shortcut): Sequential()
0:       )
0:     )
0:     (linear): Linear(in_features=2048, out_features=10, bias=True)
0:   )
0: )
0: Parameters: 23520842
0: 2018-10-07 21:10:27,649 INFO Epoch 0
2: 2018-10-07 21:16:59,507 INFO   Training loss: 1.559
3: 2018-10-07 21:16:59,504 INFO   Training loss: 1.575
1: 2018-10-07 21:16:59,507 INFO   Training loss: 1.570
0: 2018-10-07 21:16:59,509 INFO   Training loss: 1.576
3: 2018-10-07 21:18:24,202 INFO   Validation loss: 1.217 acc: 0.553
3: 2018-10-07 21:18:24,203 INFO Finished training
3: 2018-10-07 21:18:24,203 INFO Train samples 8192 time 391.858s rate 20.9055 samples/s
3: 2018-10-07 21:18:24,203 INFO Valid rate: 96.7263 samples/s
3: 2018-10-07 21:18:24,203 INFO All done!
3: Files already downloaded and verified
3: Files already downloaded and verified
1: 2018-10-07 21:18:24,633 INFO   Validation loss: 1.214 acc: 0.557
1: 2018-10-07 21:18:24,633 INFO Finished training
1: 2018-10-07 21:18:24,633 INFO Train samples 8192 time 391.858s rate 20.9055 samples/s
1: 2018-10-07 21:18:24,633 INFO Valid rate: 96.2427 samples/s
1: 2018-10-07 21:18:24,633 INFO All done!
1: Files already downloaded and verified
1: Files already downloaded and verified
2: 2018-10-07 21:18:25,079 INFO   Validation loss: 1.222 acc: 0.553
2: 2018-10-07 21:18:25,079 INFO Finished training
2: 2018-10-07 21:18:25,079 INFO Train samples 8192 time 391.858s rate 20.9055 samples/s
2: 2018-10-07 21:18:25,079 INFO Valid rate: 95.734 samples/s
2: 2018-10-07 21:18:25,079 INFO All done!
2: Files already downloaded and verified
2: Files already downloaded and verified
0: 2018-10-07 21:18:25,410 INFO   Validation loss: 1.213 acc: 0.556
0: 2018-10-07 21:18:25,577 INFO Saving summaries to /global/cscratch1/sd/sfarrell/pytorch-cifar10/output/summaries.npz
0: 2018-10-07 21:18:25,592 INFO Finished training
0: 2018-10-07 21:18:25,592 INFO Train samples 8192 time 391.86s rate 20.9054 samples/s
0: 2018-10-07 21:18:25,592 INFO Valid rate: 95.3674 samples/s
0: 2018-10-07 21:18:25,592 INFO All done!
0: Files already downloaded and verified
0: Files already downloaded and verified
